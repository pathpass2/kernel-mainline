name: Build Initrd Only

on:
  workflow_dispatch:
    inputs:
      source_run_id:
        description: "Source workflow run ID"
        required: true
        default: "16826209790"

permissions:
  contents: read
  actions: read

jobs:
  build_initrd:
    runs-on: ubuntu-22.04
    steps:
      # 第一步：下载Artifact
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: kernel-build
          path: kernel_temp

      # 第二步：检查实际文件结构
      - name: Debug file structure
        run: |
          echo "实际下载的文件结构："
          find kernel_temp -type f | tree -a
          ls -lh kernel_temp/

      # 第三步：修正路径处理
      - name: Reorganize files
        run: |
          # 创建目标目录结构
          mkdir -p $GITHUB_WORKSPACE/armbian_boot_files
          
          # 移动文件到正确位置
          mv kernel_temp/vmlinuz-6.16.0 $GITHUB_WORKSPACE/armbian_boot_files/
          mv kernel_temp/System.map-6.16.0 $GITHUB_WORKSPACE/armbian_boot_files/
          mv kernel_temp/config-6.16.0 $GITHUB_WORKSPACE/armbian_boot_files/
          
          # 设置环境变量
          echo "armbian_file_path=$GITHUB_WORKSPACE/armbian_boot_files" >> $GITHUB_ENV
          echo "kernel_main_version=6.16.0" >> $GITHUB_ENV

      # 第四步：最终验证
      - name: Verify final structure
        run: |
          echo "最终文件结构："
          ls -lh ${{ env.armbian_file_path }}
          [ -f "${{ env.armbian_file_path }}/vmlinuz-6.16.0" ] || { echo "::error::内核文件位置不正确"; exit 1; }

      # 第五步：设置环境路径
      - name: Setup paths
        run: |
          echo "armbian_file_path=$GITHUB_WORKSPACE/armbian_boot_files" >> $GITHUB_ENV
          mkdir -p ${{ env.armbian_file_path }}
          cp -r kernel_temp/armbian_boot_files/* ${{ env.armbian_file_path }}/

          


      - name: Generate initrd.img
        run: |
          sudo apt-get update
          sudo apt-get install -y debootstrap qemu-user-static
          sudo apt-get install -y initramfs-tools  u-boot-tools
          mkdir -p ${{ env.src_path }}/chroot_dir
          mkdir -p ${{ env.src_path }}/lib/modules
          mkdir -p ${{ env.src_path }}/chroot_dir/usr/bin/
          mv ${{ env.armbian_file_path }}/${{ env.kernel_main_version }}  ${{ env.src_path }}/lib/modules
          sudo cp /usr/bin/qemu-aarch64-static ${{ env.src_path }}/chroot_dir/usr/bin/
          sudo cp /etc/resolv.conf ${{ env.src_path }}/chroot_dir/etc/
          sudo chroot ${{ env.src_path }}/chroot_dir bash -c "echo 'deb http://ports.ubuntu.com/ jammy main' > /etc/apt/sources.list"
          
          sudo debootstrap --arch=arm64 --variant=minbase jammy ${{ env.src_path }}/chroot_dir http://ports.ubuntu.com/
          
          sudo mount -t proc proc ${{ env.src_path }}/chroot_dir/proc
          sudo mount -t sysfs sys ${{ env.src_path }}/chroot_dir/sys
          sudo mount -o bind /dev ${{ env.src_path }}/chroot_dir/dev
          sudo mount -o bind ${{ env.src_path }}/lib/modules ${{ env.src_path }}/chroot_dir/lib/modules
          sudo chroot ${{ env.src_path }}/chroot_dir /bin/bash <<EOF
          apt-get update
          apt-get install -y apt-utils dialog locales  locale-gen en_US.UTF-8
          apt-get install -y initramfs-tools u-boot-tools
          
          mkdir -p /boot
          mkinitramfs -c xz -o /boot/initrd.img-${{ env.kernel_main_version }}  ${{ env.kernel_main_version }}
          mkimage -A arm64 -O linux -T ramdisk -C none -a 0 -e 0 -n uInitrd -d /boot/initrd.img-${{ env.kernel_main_version }} /boot/uInitrd-${{ env.kernel_main_version }}
          EOF
          
      - name: Clean up
        run: |
          sudo umount ${{ env.src_path }}/chroot_dir/dev
          sudo umount ${{ env.src_path }}/chroot_dir/proc
          sudo umount ${{ env.src_path }}/chroot_dir/sys
          ls -lh ${{ env.src_path }}/chroot_dir/boot/
          

