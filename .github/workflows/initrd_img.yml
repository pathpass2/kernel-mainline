name: compile_initrd

on:
  workflow_run:
    workflows: ["Build ap6212_armbian-6.16.0-boot"]
    types: [completed]

jobs:
  build_initrd:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get kernel version from previous workflow
        id: get_version
        run: |
          kernel_version=$(curl -s https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.event.workflow_run.id }}/jobs | \
          jq -r '.jobs[0].steps[] | select(.name == "Get Kernel Version") | .outputs.kernel_main_version')
          echo "kernel_main_version=${kernel_version}" >> $GITHUB_ENV
          echo "获取到的内核版本: ${kernel_version}"

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: kernel-build
          path: kernel_artifacts

      - name: Prepare directories
        run: |
          sudo mkdir -p /mnt/chroot
          sudo mkdir -p /mnt/chroot/lib/modules
          sudo cp -a kernel_artifacts/${{ env.kernel_main_version }} /mnt/chroot/lib/modules/

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y debootstrap qemu-user-static initramfs-tools u-boot-tools

      - name: Setup base system
        run: |
          sudo debootstrap --arch=arm64 --variant=minbase jammy /mnt/chroot http://ports.ubuntu.com/
          
          # 准备chroot环境
          sudo cp /usr/bin/qemu-aarch64-static /mnt/chroot/usr/bin/
          sudo cp /etc/resolv.conf /mnt/chroot/etc/
          
          # 挂载必要的文件系统
          sudo mount -t proc proc /mnt/chroot/proc
          sudo mount -t sysfs sys /mnt/chroot/sys
          sudo mount -o bind /dev /mnt/chroot/dev

      - name: Build initrd in chroot
        run: |
          sudo chroot /mnt/chroot /bin/bash <<EOF
          echo "deb http://ports.ubuntu.com/ jammy main" > /etc/apt/sources.list
          apt-get update
          apt-get install -y apt-utils dialog locales initramfs-tools u-boot-tools
          locale-gen en_US.UTF-8
          
          mkdir -p /boot
          mkinitramfs -o /boot/initrd.img-${{ env.kernel_main_version }} ${{ env.kernel_main_version}}
          mkimage -A arm64 -O linux -T ramdisk -C none -a 0 -e 0 -n uInitrd \
            -d /boot/initrd.img-${{ env.kernel_main_version }} /boot/uInitrd-${{ env.kernel_main_version }}
          EOF

      - name: Collect results
        run: |
          sudo mkdir -p initrd_results
          sudo cp /mnt/chroot/boot/initrd.img-${{ env.kernel_main_version }} initrd_results/
          sudo cp /mnt/chroot/boot/uInitrd-${{ env.kernel_main_version }} initrd_results/
          ls -lh initrd_results/

      - name: Clean up
        run: |
          sudo umount /mnt/chroot/dev
          sudo umount /mnt/chroot/proc
          sudo umount /mnt/chroot/sys
          sudo rm -rf /mnt/chroot

      - name: Upload initrd artifacts
        uses: actions/upload-artifact@v4
        with:
          name: initrd-build
          path: initrd_results/
          retention-days: 3
